spring:
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: transactionEvent:andersen.payment.model.TransactionEvent
    consumer:
      bootstrap-servers: localhost:9092
      group-id: parking-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: parkingOrderEvent:andersen.payment.model.ParkingOrderEvent
            trusted:
              packages: '*'

  r2dbc:
    url: r2dbc:postgresql://localhost:5439/public
    username: postgres
    password: postgres
  webflux:
    multipart:
      max-parts: 5
      max-disk-usage-per-part: 10485760 # 10MB
  application:
    name: payment-service
  main:
    allow-bean-definition-overriding: true

server:
  port: 8086

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

kafka:
  topics:
    parking: parking
    transaction: transaction
  group-ids:
    payment-service: parking-service
#logging:
#  level:
#    root: DEBUG